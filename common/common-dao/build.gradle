buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'org.springframework.boot'

archivesBaseName = 'common-dao'

bootRepackage {
    enabled = false
}

ext {
    druidVersion = '1.1.5'
    mysqlConnectorVersion = '5.1.42'
    mybatisSpringBottVersion = '1.3.1'
    pagehelperVersion = '5.1.2'
}
version = '0.0.2'

configurations {
    mybatisGenerator
}

dependencies {
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBottVersion}")
    compile project(":common:common-core")

    compile("com.alibaba:druid:${druidVersion}")
    compile("mysql:mysql-connector-java:${mysqlConnectorVersion}")
    compile("com.github.pagehelper:pagehelper:${pagehelperVersion}")

    testCompile('org.springframework.boot:spring-boot-starter-test')

    /*mybatisGenerator*/
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'
}
/**自定义任务生成mybatis配置文件*/
task mybatisGenerator << {
    ant.taskdef(
            name: 'mybatisGenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mybatisGenerator(overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml', verbose: true) {
    }
}